<!-- TODO refactor using ant import target, move stuff into workbench or core -->
<project name="org.thechiselgroup.choosel.example.workbench" default="production" basedir=".">

	<tstamp>
		<format property="buildtime" pattern="yyyyMMddHHmmss" />
	</tstamp>

	<property name="version" value="b${buildtime}" />
	<!--
	  <property name="version" value="0.1" />
	-->

	<property name="root.dir" value="../.." />
	<property name="application.dir" value="${root.dir}/org.thechiselgroup.choosel.example.workbench" />
	<property name="src.dir" value="${application.dir}/src" />
	<property name="build.dir" value="${application.dir}/war" />
	<property name="build.temp.dir" value="${application.dir}/bin/build" />

	<!--
	  requires local-settings.properties file with
	  gae.sdk.dir=c:\\opt\\appengine-java-sdk-1.4.2
	  gwt.sdk.dir=c:\\opt\\gwt-2.3.0
	-->
	<property file="local-settings.properties" />

	<import file="${gae.sdk.dir}/config/user/ant-macros.xml" />

	<path id="compile.classpath">

		<fileset dir="${gwt.sdk.dir}">
			<include name="**/*.jar" />
		</fileset>

		<pathelement location="${src.dir}" />
		<pathelement location="${build.dir}/WEB-INF/classes" />

		<pathelement location="${root.dir}/org.thechiselgroup.choosel.core/src" />
		<pathelement location="${root.dir}/org.thechiselgroup.choosel.core/war/WEB-INF/classes" />
		<fileset dir="${root.dir}/org.thechiselgroup.choosel.core">
			<include name="lib/*.jar" />
		</fileset>

		<pathelement location="${root.dir}/org.thechiselgroup.choosel.dnd/src" />
		<pathelement location="${root.dir}/org.thechiselgroup.choosel.dnd/war/WEB-INF/classes" />
		<fileset dir="${root.dir}/org.thechiselgroup.choosel.dnd">
			<include name="lib/*.jar" />
		</fileset>

		<pathelement location="${root.dir}/org.thechiselgroup.choosel.protovis/src" />
		<pathelement location="${root.dir}/org.thechiselgroup.choosel.protovis/war/WEB-INF/classes" />

		<pathelement location="${root.dir}/org.thechiselgroup.choosel.visualization_component.chart/src" />
		<pathelement location="${root.dir}/org.thechiselgroup.choosel.visualization_component.chart/war/WEB-INF/classes" />

		<pathelement location="${root.dir}/org.thechiselgroup.choosel.visualization_component.graph/src" />
		<pathelement location="${root.dir}/org.thechiselgroup.choosel.visualization_component.graph/war/WEB-INF/classes" />
		<fileset dir="${root.dir}/org.thechiselgroup.choosel.visualization_component.graph">
			<include name="lib/*.jar" />
		</fileset>

		<pathelement location="${root.dir}/org.thechiselgroup.choosel.visualization_component.map/src" />
		<pathelement location="${root.dir}/org.thechiselgroup.choosel.visualization_component.map/war/WEB-INF/classes" />
		<fileset dir="${root.dir}/org.thechiselgroup.choosel.visualization_component.map">
			<include name="lib/*.jar" />
		</fileset>

		<pathelement location="${root.dir}/org.thechiselgroup.choosel.visualization_component.timeline/src" />
		<pathelement location="${root.dir}/org.thechiselgroup.choosel.visualization_component.timeline/war/WEB-INF/classes" />

		<pathelement location="${root.dir}/org.thechiselgroup.choosel.visualization_component.text/src" />
		<pathelement location="${root.dir}/org.thechiselgroup.choosel.visualization_component.text/war/WEB-INF/classes" />

		<pathelement location="${root.dir}/org.thechiselgroup.choosel.workbench/src" />
		<pathelement location="${root.dir}/org.thechiselgroup.choosel.workbench/war/WEB-INF/classes" />
		<fileset dir="${root.dir}/org.thechiselgroup.choosel.workbench">
			<include name="lib/*.jar" />
		</fileset>

	</path>

	<target name="draft" depends="copy-choosel-jars,draft-gwt-compile" />

	<!--
	Builds the jar files from the different Choosel modules that are required for the server side, and copies
	them to WEB-INF/lib. We only need to do this for the server side jars, because we reference the client side
	code in (a) our classpath for gwt-compile and (b) our launch config for the dev environment. 
	-->
	<target name="copy-choosel-jars" depends="prepare">
		<antcall target="choosel-core" />
		<antcall target="choosel-workbench" />

		<copy todir="${build.dir}/WEB-INF/lib">
			<fileset dir="${build.temp.dir}/lib" includes="*.jar" />
		</copy>
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${build.temp.dir}/lib" />
	</target>

	<target name="choosel-workbench">
		<ant antfile="build/build.xml" dir="${root.dir}/org.thechiselgroup.choosel.workbench" target="create-jar">
			<property name="dist" value="choosel/${build.temp.dir}/lib" />
		</ant>
	</target>

	<target name="choosel-core">
		<ant antfile="build/build.xml" dir="${root.dir}/org.thechiselgroup.choosel.core" target="create-jar">
			<property name="dist" value="choosel/${build.temp.dir}/lib" />
		</ant>
	</target>

	<target name="clean" description="remove automatically generated build files">
		<delete dir="${build.temp.dir}" />
		<delete dir="${build.dir}/org.thechiselgroup.choosel.example.workbench.ChooselExampleWorkbench" />
		<delete dir="${build.dir}/WEB-INF/deploy" />
		<delete>
			<fileset dir="${build.dir}/WEB-INF/lib" includes="choosel.*.jar" />
		</delete>
	</target>

	<!-- depends on binary class files, but Eclipse does compilation step in advance -->
	<target name="draft-gwt-compile">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<path refid="compile.classpath" />
			</classpath>
			<arg line="-draftCompile -optimize 0 -ea -logLevel INFO -style DETAILED -localWorkers 3 -war ${build.dir}" />
			<arg value="org.thechiselgroup.choosel.example.workbench.ChooselExampleWorkbenchDevCompile" />
			<jvmarg value="-Xmx2048m" />
			<jvmarg value="-Xss20m" />
		</java>
	</target>

	<target name="production" depends="copy-choosel-jars,production-gwt-compile" />
	
	<!-- depends on binary class files, but Eclipse does compilation step in advance -->
	<target name="production-gwt-compile">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<path refid="compile.classpath" />
			</classpath>
			<arg line="-XdisableCastChecking -XdisableClassMetadata -optimize 9 -logLevel INFO -style OBFUSCATED -localWorkers 3 -war ${build.dir}" />
			<arg value="org.thechiselgroup.choosel.example.workbench.ChooselExampleWorkbench" />
			<jvmarg value="-Xmx2048m" />
			<jvmarg value="-Xss20m" />
		</java>
	</target>

</project>