Index: src/com/allen_sauer/gwt/dnd/client/MouseDragHandler.java
===================================================================
--- src/com/allen_sauer/gwt/dnd/client/MouseDragHandler.java	(revision 992)
+++ src/com/allen_sauer/gwt/dnd/client/MouseDragHandler.java	(working copy)
@@ -113,26 +113,29 @@
   }
 
   public void onMouseDown(MouseDownEvent event) {
-    Widget sender = (Widget) event.getSource();
-    int x = event.getX();
-    int y = event.getY();
-
-    int button = event.getNativeButton();
-
+    // PERFORMANCE: check this first before accessing DOM / element locations
     if (dragging == ACTIVELY_DRAGGING || dragging == DRAGGING_NO_MOVEMENT_YET) {
       // Ignore additional mouse buttons depressed while still dragging
       return;
     }
-
-    if (button != NativeEvent.BUTTON_LEFT) {
+    // PERFORMANCE: check this first before accessing DOM / element locations
+    if (mouseDownWidget != null) {
+      // For multiple overlapping draggable widgets, ignore all but first onMouseDown
       return;
     }
 
-    if (mouseDownWidget != null) {
-      // For multiple overlapping draggable widgets, ignore all but first onMouseDown
+    Widget sender = (Widget) event.getSource();
+
+    int button = event.getNativeButton();
+
+    // PERFORMANCE: check this first before accessing DOM / element locations
+    if (button != NativeEvent.BUTTON_LEFT) {
       return;
     }
 
+    int x = event.getX();
+    int y = event.getY();
+
     // mouse down (not first mouse move) determines draggable widget
     mouseDownWidget = sender;
     context.draggable = dragHandleMap.get(mouseDownWidget).getDragable();
@@ -174,18 +177,28 @@
   }
 
   public void onMouseMove(MouseMoveEvent event) {
+    // PERFORMANCE: check this first before accessing DOM / element locations
+    if (dragging == NOT_DRAGGING && !mouseDown) {
+      return;
+    }
+        
     Widget sender = (Widget) event.getSource();
+    
+    // PERFORMANCE: check this first before accessing DOM / element locations
+    // TODO remove Safari workaround after GWT issue 1807 fixed
+    if ((dragging == ACTIVELY_DRAGGING || dragging == DRAGGING_NO_MOVEMENT_YET)
+          && (sender != capturingWidget)) {
+      // In Safari 1.3.2 MAC, other mouse events continue to arrive
+      // even when capturing
+      return;
+    }       
+
     Element elem = sender.getElement();
     // TODO optimize for the fact that elem is at (0,0)
     int x = event.getRelativeX(elem);
     int y = event.getRelativeY(elem);
 
     if (dragging == ACTIVELY_DRAGGING || dragging == DRAGGING_NO_MOVEMENT_YET) {
-      // TODO remove Safari workaround after GWT issue 1807 fixed
-      if (sender != capturingWidget) {
-        // In Safari 1.3.2 MAC, other mouse events continue to arrive even when capturing
-        return;
-      }
       dragging = ACTIVELY_DRAGGING;
     } else {
       if (mouseDown) {
