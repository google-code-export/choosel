Index: build/patches/protovis-d3.2.js
===================================================================
--- build/patches/protovis-d3.2.js	(revision 1389)
+++ build/patches/protovis-d3.2.js	(working copy)
@@ -5683,6 +5683,35 @@
   }
   return e;
 };
+pv.SvgScene.ellipse = function(scenes) {
+	  var e = scenes.$g.firstChild;
+	  for (var i = 0; i < scenes.length; i++) {
+	    var s = scenes[i];
+
+	    /* visible */
+	    if (!s.visible) continue;
+	    var fill = s.fillStyle, stroke = s.strokeStyle;
+	    if (!fill.opacity && !stroke.opacity) continue;
+
+	    e = this.expect(e, "ellipse", {
+	        "shape-rendering": s.antialias ? null : "crispEdges",
+	        "pointer-events": s.events,
+	        "cursor": s.cursor,
+	        "cx": s.left,
+	        "cy": s.top,
+	        "rx": s.horizontalRadius,
+	        "ry": s.verticalRadius,
+	        "fill": fill.color,
+	        "fill-opacity": fill.opacity || null,
+	        "stroke": stroke.color,
+	        "stroke-opacity": stroke.opacity || null,
+	        "stroke-width": stroke.opacity ? s.lineWidth / this.scale : null,
+	        "transform": "rotate(" + 180 * s.angle / Math.PI + " " + s.left + " " + s.top + ")"
+	      });
+	    e = this.append(e, scenes, i);
+	  }
+	  return e;
+	};
 pv.SvgScene.dot = function(scenes) {
   var e = scenes.$g.firstChild;
   for (var i = 0; i < scenes.length; i++) {
@@ -6453,7 +6482,7 @@
 /**
  * The mark type; a lower camelCase name. The type name controls rendering
  * behavior, and unless the rendering engine is extended, must be one of the
- * built-in concrete mark types: area, bar, dot, image, label, line, panel,
+ * built-in concrete mark types: area, bar, ellipse, dot, image, label, line, panel,
  * rule, or wedge.
  *
  * @type string
@@ -7885,6 +7914,32 @@
     .extend(pv.Mark.prototype.defaults)
     .lineWidth(1.5)
     .fillStyle(pv.Colors.category20().by(pv.parent));
+
+/**
+ * Ellipse prototype: TODO documentation
+ */
+pv.Ellipse = function() {
+  pv.Mark.call(this);
+};
+
+pv.Ellipse.prototype = pv.extend(pv.Mark)
+	.property("horizontalRadius", Number)
+	.property("verticalRadius", Number)
+	.property("angle", Number)	
+	.property("lineWidth", Number)
+	.property("strokeStyle", pv.color)
+	.property("fillStyle", pv.color);
+
+pv.Ellipse.prototype.type = "ellipse";
+
+pv.Ellipse.prototype.defaults = new pv.Ellipse()
+	.extend(pv.Mark.prototype.defaults)
+	.angle(0)
+	.lineWidth(1.5)
+	.horizontalRadius(10)
+	.verticalRadius(10)
+	.fillStyle(pv.Colors.category20().by(pv.parent));
+
 /**
  * Constructs a new dot mark with default properties. Dots are not typically
  * constructed directly, but by adding to a panel or an existing mark via
